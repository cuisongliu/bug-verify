name: TestBug#2537
on:
  workflow_dispatch:
    inputs:
jobs:
  image-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [ user, terminal, account ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: cuisongliu/sealos
          ref: 'deploy'

      - name: Auto install sealos
        uses: labring/sealos-action@v0.0.4
        with:
          sealosVersion: 4.1.5-alpha2


      - name: Build ${{ matrix.module }} amd64
        working-directory: controllers/${{ matrix.module }}
        run: |
          GOARCH=amd64 make build
          mv bin/manager bin/controller-${{ matrix.module }}-amd64
          chmod +x bin/controller-${{ matrix.module }}-amd64

      - name: Prepare
        id: prepare
        run: |
          TAG=2545
          echo tag_name=${TAG} >> $GITHUB_OUTPUT

      - name: build   ${{ matrix.module }} main controller image
        env:
          # fork friendly ^^
          DOCKER_REPO: ghcr.io/${{ github.repository_owner }}/sealos-${{ matrix.module }}-controller
        working-directory: controllers/${{ matrix.module }}/deploy
        run: |
          ls -l
          sealos build --debug  -t ${DOCKER_REPO}:${{ steps.prepare.outputs.tag_name }}-cluster .
          sealos login -u ${{ github.repository_owner }} -p ${{ secrets.G_REGISTRY_TOKEN }} --debug ghcr.io
          sealos push  ${DOCKER_REPO}:${{ steps.prepare.outputs.tag_name }}-cluster
      - name: docker images
        run: |
          sudo sealos images
  verify:
    needs:
      - image-build
    runs-on: ubuntu-latest
    steps:

      - name: Auto install sealos
        uses: labring/sealos-action@v0.0.4
        with:
          sealosVersion: 4.1.5-alpha2

      - name: Auto install k8s using sealos
        run: |
          sudo sealos run labring/kubernetes:v1.25.0 labring/helm:v3.8.2 labring/calico:v3.24.1 --single --debug
          NODENAME=$(sudo kubectl get nodes -ojsonpath='{.items[0].metadata.name}')
          NODEIP=$(kubectl get nodes -ojsonpath='{.items[0].status.addresses[0].address}')
          echo "NodeName=$NODENAME,NodeIP=$NODEIP"
          sudo -u root kubectl taint node $NODENAME node-role.kubernetes.io/master-
          sudo -u root kubectl taint node $NODENAME node-role.kubernetes.io/control-plane-

      - name: Auto install app using sealos
        run: |
          sudo sealos run ghcr.io/${{ github.repository_owner }}/sealos-user-controller:${{ steps.prepare.outputs.tag_name }}-cluster
      - name: Auto install app using sealos
        run: |
          echo "apiVersion: v1
kind: Namespace
metadata:
  name: account-system
---
apiVersion: v1
kind: Secret
metadata:
  name: payment-secret
  namespace: account-system
type: Opaque
data:
  MchID: xxxx
  AppID: xxxxx
  MchAPIv3Key: xxxx
  MchCertificateSerialNumber: xxxx
  WechatPrivateKey: xxxx" | kubectl apply -f -
          sudo sealos run ghcr.io/${{ github.repository_owner }}/sealos-account-controller:${{ steps.prepare.outputs.tag_name }}-cluster
      - name: Auto install app using sealos
        run: |
          sudo sealos run ghcr.io/${{ github.repository_owner }}/sealos-terminal-controller:${{ steps.prepare.outputs.tag_name }}-cluster