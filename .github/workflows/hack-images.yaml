name: TestBug#hack-images
on:
  workflow_dispatch:
    inputs:
jobs:
  verify-normal:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Auto install sealos
        uses: labring/sealos-action@v0.0.4
        with:
          type: install-dev
          sealosGit: https://github.com/cuisongliu/sealos.git
          sealosGitBranch: hack
          pruneCRI: true

      - name: Auto install k8s using sealos
        run: |
          sudo sealos run labring/kubernetes:v1.25.0 labring/helm:v3.8.2 labring/calico:v3.24.1 --single --debug
          mkdir -p "$HOME/.kube"
          sudo cp -i /etc/kubernetes/admin.conf "$HOME/.kube/config"
          sudo chown "$(whoami)" "$HOME/.kube/config"
          kubectl get nodes --no-headers -oname | while read -r node; do kubectl get "$node" -o template='{{range .spec.taints}}{{.key}}{{"\n"}}{{end}}' | while read -r taint; do
            kubectl taint ${node/\// } "$taint"-
          done; done
          kubectl get svc
          sudo cat /root/.sealos/default/etc/kubeadm-init.yaml
      - name: After k8s operation
        run: |
          bash waitRunning.sh
          sudo crictl ps -a
          sudo cat /etc/hosts
          sudo systemctl status kubelet

  verify-hack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Auto install sealos
        uses: labring/sealos-action@v0.0.4
        with:
          type: install-dev
          sealosGit: https://github.com/cuisongliu/sealos.git
          sealosGitBranch: hack
          pruneCRI: true
      - name: build new image
        working-directory: sealos#podip
        run: |
          sudo sealos build --debug -t hack:dev   .

      - name: Auto install k8s using sealos
        run: |
          sudo sealos run hack:dev labring/helm:v3.8.2 labring/calico:v3.24.1 --single --debug
          mkdir -p "$HOME/.kube"
          sudo cp -i /etc/kubernetes/admin.conf "$HOME/.kube/config"
          sudo chown "$(whoami)" "$HOME/.kube/config"
          kubectl get nodes --no-headers -oname | while read -r node; do kubectl get "$node" -o template='{{range .spec.taints}}{{.key}}{{"\n"}}{{end}}' | while read -r taint; do
            kubectl taint ${node/\// } "$taint"-
          done; done
          kubectl get svc
          sudo cat /root/.sealos/default/etc/kubeadm-init.yaml
      - name: After k8s operation
        run: |
          bash waitRunning.sh
          sudo crictl ps -a
          sudo cat /etc/hosts
          sudo systemctl status kubelet
